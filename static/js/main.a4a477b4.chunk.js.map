{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","titleError","setTitleError","userError","setUserError","allTodos","setAllTodos","action","method","onSubmit","event","preventDefault","newTodo","sort","todo1","todo2","currentTodos","type","value","onChange","target","placeholder","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4a477b4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\nexport const UserInfo = (\n  { user }: { user: User | undefined },\n) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo = ({ todo }: { todo: Todo }) => (\n  <article\n    key={todo.id}\n    data-id={todo.id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList = ({ todos }: { todos: Todo[] }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo todo={todo} data-id={todo.id} />\n      ))\n    }\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst todos = todosFromServer.map(\n  todo => ({\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId),\n  }),\n);\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const [allTodos, setAllTodos] = useState<Todo[]>(todos);\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!+selectedUser) {\n      setUserError(true);\n    }\n\n    if (title && +selectedUser) {\n      const newTodo: Todo = {\n        title,\n        userId: +selectedUser,\n        user: usersFromServer.find(user => user.id === +selectedUser),\n        completed: false,\n        id: [...allTodos].sort((todo1, todo2) => todo2.id - todo1.id)[0].id + 1,\n      };\n\n      setAllTodos(currentTodos => [...currentTodos, newTodo]);\n\n      setTitle('');\n      setTitleError(false);\n      setSelectedUser('0');\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n            placeholder=\"Enter a title\"\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            defaultValue=\"0\"\n            value={selectedUser}\n            onChange={event => {\n              setSelectedUser(event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))\n            }\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}